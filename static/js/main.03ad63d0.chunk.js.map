{"version":3,"sources":["components/grid/Grid.tsx","components/text-input/TextInput.tsx","components/header/Header.tsx","components/sidebar/Sidebar.tsx","components/app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Grid","props","gridStyles","display","gridTemplateColumns","grid","columnCount","gridColumnGap","columnGap","padding","paddingTopBottom","paddingLeftRight","gridTemplateRows","rowCount","gridRowGap","rowGap","columnBackground","background","border","columns","rows","i","j","push","style","generateColumns","className","handleFocus","e","target","select","TextInput","aria-label","label","htmlFor","type","id","value","onFocus","onChange","Header","gridState","onColumnCountChange","onColumnGapChange","onRowCountChange","onRowGapChange","onPaddingTopBottomChange","onPaddingLeftRightChange","onClick","onCodeButtonClick","toggleButtonIcon","toggleButtonText","Sidebar","console","log","onClose","defaultGridState","openIcon","width","height","viewBox","fill","xmlns","d","closeIcon","App","useState","isSidebarVisible","setIsSidebarVisible","sidebarToggleText","setSidebarToggleText","setGridState","sidebarToggleIcon","setSidebarToggleIcon","toggleSidebar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03ad63d0.chunk.js","sourcesContent":["import { IGridState } from '../app/App';\n\ninterface IGridProps {\n\tclassName: string;\n\tgrid: IGridState;\n}\n\nexport const Grid = (props: IGridProps) => {\n\tconst gridStyles = {\n\t\tdisplay: 'grid',\n\t\tgridTemplateColumns: `repeat(${props.grid.columnCount}, 1fr)`,\n\t\tgridColumnGap: `${props.grid.columnGap}px`,\n\t\tpadding: `${props.grid.paddingTopBottom}px ${props.grid.paddingLeftRight}px`,\n\t\tgridTemplateRows: `repeat(${props.grid.rowCount}, 1fr)`,\n\t\tgridRowGap: `${props.grid.rowGap}px`,\n\t};\n\n\tconst columnBackground = {\n\t\tbackground: 'rgba(250, 134, 134, 0.3)',\n\t\tborder: '1px dashed #fa8686',\n\t};\n\n\tfunction generateColumns(rowCount: number, columnCount: number) {\n\t\tconst rows = [];\n\n\t\tfor (let i = 0; i < rowCount; i++) {\n\t\t\tconst columns = [];\n\n\t\t\tfor (let j = 0; j < columnCount; j++) {\n\t\t\t\tcolumns.push(<div style={columnBackground} key={j} />);\n\t\t\t}\n\t\t\trows.push(columns);\n\t\t}\n\t\treturn rows;\n\t}\n\n\tconst columns = generateColumns(props.grid.rowCount, props.grid.columnCount);\n\n\treturn (\n\t\t<div style={gridStyles} className={props.className}>\n\t\t\t{columns}\n\t\t</div>\n\t);\n};\n","import '../text-input/TextInput.css';\n\ninterface TextInputProps {\n  icon?: string;\n  type: string\n  value?: string | number;\n  placeholder?: string;\n  label: string;\n  onChange?: (e: any) => void;\n}\n\nfunction handleFocus(e: any) {\n  e.target.select();\n}\n\nexport const TextInput = (props: TextInputProps) => {\n  return (\n    <>\n      <label aria-label={props.label} htmlFor={props.label}>{props.label}</label>\n      <input type={props.type} id={props.label} value={props.value} onFocus={handleFocus} onChange={props.onChange} />\n    </>\n  )\n}","import { IGridState } from '../app/App';\nimport { TextInput } from '../text-input/TextInput';\nimport '../header/Header.css';\n\ninterface HeaderProps {\n\tgridState: IGridState;\n\tonColumnCountChange: (e: any) => void;\n\tonColumnGapChange: (e: any) => void;\n\tonPaddingTopBottomChange: (e: any) => void;\n\tonPaddingLeftRightChange: (e: any) => void;\n\tonRowCountChange: (e: any) => void;\n\tonRowGapChange: (e: any) => void;\n\tonCodeButtonClick: () => void;\n\ttoggleButtonText: string;\n\ttoggleButtonIcon: any;\n}\n\nexport const Header = (props: HeaderProps) => {\n\treturn (\n\t\t<header className={'header'}>\n\t\t\t<h1>Grid Playground</h1>\n\t\t\t<div className={'input-group'}>\n\t\t\t\t<TextInput\n\t\t\t\t\ttype={'number'}\n\t\t\t\t\tlabel={'Column count'}\n\t\t\t\t\tvalue={props.gridState.columnCount}\n\t\t\t\t\tonChange={props.onColumnCountChange}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\ttype={'number'}\n\t\t\t\t\tlabel={'Column gap'}\n\t\t\t\t\tvalue={props.gridState.columnGap}\n\t\t\t\t\tonChange={props.onColumnGapChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={'input-group'}>\n\t\t\t\t<TextInput\n\t\t\t\t\ttype={'number'}\n\t\t\t\t\tlabel={'Row count'}\n\t\t\t\t\tvalue={props.gridState.rowCount}\n\t\t\t\t\tonChange={props.onRowCountChange}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\ttype={'number'}\n\t\t\t\t\tlabel={'Row gap'}\n\t\t\t\t\tvalue={props.gridState.rowGap}\n\t\t\t\t\tonChange={props.onRowGapChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={'input-group'}>\n\t\t\t\t<TextInput\n\t\t\t\t\ttype={'number'}\n\t\t\t\t\tlabel={'Padding Top and Bottom'}\n\t\t\t\t\tvalue={props.gridState.paddingTopBottom}\n\t\t\t\t\tonChange={props.onPaddingTopBottomChange}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\ttype={'number'}\n\t\t\t\t\tlabel={'Padding Left and Right'}\n\t\t\t\t\tvalue={props.gridState.paddingLeftRight}\n\t\t\t\t\tonChange={props.onPaddingLeftRightChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<button onClick={props.onCodeButtonClick}>\n\t\t\t\t{props.toggleButtonIcon}\n\t\t\t\t{props.toggleButtonText}\n\t\t\t</button>\n\t\t</header>\n\t);\n};\n","import React from 'react';\nimport { IGridState } from '../app/App';\n\ninterface SidebarProps {\n\tonClose?: () => void;\n\tgridState: IGridState;\n}\n\nexport const Sidebar = (props: SidebarProps) => {\n\tconst gridState = props.gridState;\n\tconsole.log(gridState);\n\treturn (\n\t\t<div className={'sidebar'}>\n\t\t\t<button className={'close-button'} onClick={props.onClose}>\n\t\t\t\tClose\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n","import React, { useState } from 'react';\nimport { Grid } from '../grid/Grid';\nimport { Header } from '../header/Header';\nimport { Sidebar } from '../sidebar/Sidebar';\nimport './App.css';\n\nexport interface IGridState {\n\tcolumnCount: number;\n\tcolumnGap: number;\n\tpaddingTopBottom: number;\n\tpaddingLeftRight: number;\n\trowCount: number;\n\trowGap: number;\n}\n\nconst defaultGridState: IGridState = {\n\tcolumnCount: 12,\n\tcolumnGap: 20,\n\tpaddingTopBottom: 32,\n\tpaddingLeftRight: 32,\n\trowCount: 1,\n\trowGap: 20,\n};\n\nconst openIcon = (\n\t<svg\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t>\n\t\t<path\n\t\t\td=\"M19.25 4C20.7688 4 22 5.23122 22 6.75V17.25C22 18.7688 20.7688 20 19.25 20H4.75C3.23122 20 2 18.7688 2 17.25V6.75C2 5.23122 3.23122 4 4.75 4H19.25ZM20.5 6.75C20.5 6.05964 19.9404 5.5 19.25 5.5H15.9957V18.5H19.25C19.9404 18.5 20.5 17.9404 20.5 17.25V6.75ZM14.4957 18.5V5.5H4.75C4.05964 5.5 3.5 6.05964 3.5 6.75V17.25C3.5 17.9404 4.05964 18.5 4.75 18.5H14.4957Z\"\n\t\t\tfill=\"#212121\"\n\t\t/>\n\t</svg>\n);\n\nconst closeIcon = (\n\t<svg\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t>\n\t\t<path\n\t\t\td=\"M6.00473 12.0001C6.00463 11.7239 6.22841 11.5 6.50455 11.4999L11.2895 11.4981L9.64365 9.85233C9.44839 9.65707 9.44839 9.34049 9.64365 9.14523C9.83891 8.94996 10.1555 8.94996 10.3508 9.14523L12.85 11.6445C13.0453 11.8397 13.0453 12.1563 12.85 12.3516L10.3508 14.8508C10.1555 15.0461 9.83891 15.0461 9.64365 14.8508C9.44839 14.6556 9.44839 14.339 9.64365 14.1437L11.2892 12.4981L6.50492 12.4999C6.22877 12.5 6.00483 12.2762 6.00473 12.0001Z\"\n\t\t\tfill=\"#212121\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M19.25 20.0017C20.7688 20.0017 22 18.7705 22 17.2517L22 6.74805C22 5.22927 20.7688 3.99805 19.25 3.99805H4.75C3.23122 3.99805 2 5.22926 2 6.74805V17.2517C2 18.7705 3.23122 20.0017 4.75 20.0017L19.25 20.0017ZM20.5 17.2517C20.5 17.9421 19.9404 18.5017 19.25 18.5017H15.9958L15.9959 5.49805L19.25 5.49805C19.9404 5.49805 20.5 6.05769 20.5 6.74805L20.5 17.2517ZM14.4959 5.49805L14.4958 18.5017L4.75 18.5017C4.05964 18.5017 3.5 17.9421 3.5 17.2517L3.5 6.74805C3.5 6.05769 4.05965 5.49805 4.75 5.49805L14.4959 5.49805Z\"\n\t\t\tfill=\"#212121\"\n\t\t/>\n\t</svg>\n);\n\nfunction App() {\n\tconst [isSidebarVisible, setIsSidebarVisible] = useState(false);\n\tconst [sidebarToggleText, setSidebarToggleText] = useState('View code');\n\tconst [gridState, setGridState] = useState(defaultGridState);\n\tconst [sidebarToggleIcon, setSidebarToggleIcon] = useState(openIcon);\n\n\tfunction toggleSidebar() {\n\t\tsetIsSidebarVisible(!isSidebarVisible);\n\t\tsetSidebarToggleText(\n\t\t\tsidebarToggleText === 'View code' ? 'Hide code' : 'View code'\n\t\t);\n\t\tsetSidebarToggleIcon(sidebarToggleIcon === openIcon ? closeIcon : openIcon);\n\t}\n\n\tfunction handleColumnCountChange(e: any) {\n\t\tsetGridState({ ...gridState, columnCount: e.target.value });\n\t}\n\n\tfunction handleColumnGutterChange(e: any) {\n\t\tsetGridState({ ...gridState, columnGap: e.target.value });\n\t}\n\n\tfunction handleRowCountChange(e: any) {\n\t\tsetGridState({ ...gridState, rowCount: e.target.value });\n\t}\n\n\tfunction handleRowGapChange(e: any) {\n\t\tsetGridState({ ...gridState, rowGap: e.target.value });\n\t}\n\n\tfunction handlePaddingTopBottomChange(e: any) {\n\t\tsetGridState({ ...gridState, paddingTopBottom: e.target.value });\n\t}\n\n\tfunction handlePaddingLeftRightChange(e: any) {\n\t\tsetGridState({ ...gridState, paddingLeftRight: e.target.value });\n\t}\n\n\treturn (\n\t\t<div className={'app'}>\n\t\t\t<Header\n\t\t\t\tgridState={gridState}\n\t\t\t\tonColumnCountChange={handleColumnCountChange}\n\t\t\t\tonColumnGapChange={handleColumnGutterChange}\n\t\t\t\tonPaddingTopBottomChange={handlePaddingTopBottomChange}\n\t\t\t\tonPaddingLeftRightChange={handlePaddingLeftRightChange}\n\t\t\t\tonRowCountChange={handleRowCountChange}\n\t\t\t\tonRowGapChange={handleRowGapChange}\n\t\t\t\tonCodeButtonClick={toggleSidebar}\n\t\t\t\ttoggleButtonText={sidebarToggleText}\n\t\t\t\ttoggleButtonIcon={sidebarToggleIcon}\n\t\t\t/>\n\t\t\t<Grid className={'main'} grid={gridState} />\n\t\t\t{isSidebarVisible && (\n\t\t\t\t<Sidebar gridState={gridState} onClose={toggleSidebar} />\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}